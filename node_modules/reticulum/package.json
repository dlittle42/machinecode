{
  "_args": [
    [
      {
        "raw": "https://github.com/skezo/Reticulum.git",
        "scope": null,
        "escapedName": null,
        "name": null,
        "rawSpec": "https://github.com/skezo/Reticulum.git",
        "spec": "git+https://github.com/skezo/Reticulum.git",
        "type": "hosted",
        "hosted": {
          "type": "github",
          "ssh": "git@github.com:skezo/Reticulum.git",
          "sshUrl": "git+ssh://git@github.com/skezo/Reticulum.git",
          "httpsUrl": "git+https://github.com/skezo/Reticulum.git",
          "gitUrl": "git://github.com/skezo/Reticulum.git",
          "shortcut": "github:skezo/Reticulum",
          "directUrl": "https://raw.githubusercontent.com/skezo/Reticulum/master/package.json"
        }
      },
      "/Users/dlittle/Sites/machinecode"
    ]
  ],
  "_from": "git+https://github.com/skezo/Reticulum.git",
  "_id": "reticulum@1.0.0",
  "_inCache": true,
  "_installable": true,
  "_location": "/reticulum",
  "_phantomChildren": {},
  "_requested": {
    "raw": "https://github.com/skezo/Reticulum.git",
    "scope": null,
    "escapedName": null,
    "name": null,
    "rawSpec": "https://github.com/skezo/Reticulum.git",
    "spec": "git+https://github.com/skezo/Reticulum.git",
    "type": "hosted",
    "hosted": {
      "type": "github",
      "ssh": "git@github.com:skezo/Reticulum.git",
      "sshUrl": "git+ssh://git@github.com/skezo/Reticulum.git",
      "httpsUrl": "git+https://github.com/skezo/Reticulum.git",
      "gitUrl": "git://github.com/skezo/Reticulum.git",
      "shortcut": "github:skezo/Reticulum",
      "directUrl": "https://raw.githubusercontent.com/skezo/Reticulum/master/package.json"
    }
  },
  "_requiredBy": [
    "#USER"
  ],
  "_resolved": "git+https://github.com/skezo/Reticulum.git#b42ad97566b1ee6f38c4d9db1d1cd2e6d4f12008",
  "_shasum": "ca085a8958880b1ddd29e0b53674beb2cdd6810a",
  "_shrinkwrap": null,
  "_spec": "https://github.com/skezo/Reticulum.git",
  "_where": "/Users/dlittle/Sites/machinecode",
  "author": {
    "name": "Skezo",
    "email": "admin@gqpbj.com"
  },
  "bugs": {
    "url": "https://github.com/skezo/Reticulum/issues"
  },
  "dependencies": {},
  "description": "A gaze interaction manager for VR with three.js, supporting depth.",
  "devDependencies": {},
  "engines": {
    "node": ">=0.8.0"
  },
  "gitHead": "b42ad97566b1ee6f38c4d9db1d1cd2e6d4f12008",
  "homepage": "https://github.com/skezo/Reticulum",
  "keywords": [
    "vr",
    "reticle",
    "gaze",
    "cardboard"
  ],
  "license": "MIT",
  "main": "reticulum.js",
  "name": "reticulum",
  "optionalDependencies": {},
  "readme": "#Reticulum\n\n> A simple gaze interaction manager for VR with Three.js. [See examples](https://skezo.github.io/Reticulum/)\n\n![Material Design](https://skezo.github.io/Reticulum/examples/img/interactivepatterns_displayreticle.png)\n\n##Purpose\nReticulum attempts to follow Google's interactive pattern for the [display reticle](http://www.google.com/design/spec-vr/interactive-patterns/display-reticle.html). It creates the illusion of depth by projecting spatially onto targeted objects while maintaining a fixed size so that it is easy to see at all times.\n\n\n### Features:\n- Avoids double vision and depth issues by projecting spatially onto targeted objects\n- Gaze and click events for targeted objects `onGazeOver`, `onGazeOut`, `onGazeLong` and `onGazeClick`\n- Set different fuze durations for targeted objects\n- Built in [fuse support](http://www.google.com/design/spec-vr/interactive-patterns/controls.html#controls-fuse-buttons)\n- Display the reticle only when the camera can see a targeted object \n- Works in the browser with Three.js (r73)\n\n\n### 1. Getting Started\n\nLoad Three.js and include the Reticulum.js file. You might also want to use the [Web VR boilerplate](https://github.com/borismus/webvr-boilerplate):\n\n```html\n<script src=\"three.js\"></script>\n<script src=\"reticulum.js\"></script>\n\n```\n\n### 2. Initiate and set options\n\nCall the Reticulum initializer function and set your options. Options can be set globally or per targeted object. \n\n**Note:** You must define the `camera`... it is required. \n\n```javascript\nReticulum.init(camera, {\n\tproximity: false,\n\tclickevents: true,\n\tnear: null, //near factor of the raycaster (shouldn't be negative and should be smaller than the far property)\n\tfar: null, //far factor of the raycaster (shouldn't be negative and should be larger than the near property)\n\treticle: {\n\t\tvisible: true,\n\t\trestPoint: 1000, //Defines the reticle's resting point when no object has been targeted\n\t\tcolor: 0xcc0000,\n\t\tinnerRadius: 0.0001,\n\t\touterRadius: 0.003,\n\t\thover: {\n\t\t\tcolor: 0xcc0000,\n\t\t\tinnerRadius: 0.02,\n\t\t\touterRadius: 0.024,\n\t\t\tspeed: 5,\n\t\t\tvibrate: 50 //Set to 0 or [] to disable\n\t\t}\n\t},\n\tfuse: {\n\t\tvisible: true,\n\t\tduration: 2.5,\n\t\tcolor: 0x00fff6,\n\t\tinnerRadius: 0.045,\n\t\touterRadius: 0.06,\n\t\tvibrate: 100, //Set to 0 or [] to disable\n\t\tclickCancelFuse: false //If users clicks on targeted object fuse is canceled\n\t}\n});\n```\n\n### 3. Define targeted objects and options\n\nAdd the three.js objects you want to be targeted objects. Override global options by setting local ones.\n\n```javascript\n\nReticulum.add( object, {\n\tclickCancelFuse: true, // Overrides global setting for fuse's clickCancelFuse\n\treticleHoverColor: 0x00fff6, // Overrides global reticle hover color\n\tfuseVisible: true, // Overrides global fuse visibility\n\tfuseDuration: 1.5, // Overrides global fuse duration\n\tfuseColor: 0xcc0000, // Overrides global fuse color\n\tonGazeOver: function(){\n\t\t// do something when user targets object\n\t\tthis.material.emissive.setHex( 0xffcc00 );\n\t},\n\tonGazeOut: function(){\n\t\t// do something when user moves reticle off targeted object\n\t\tthis.material.emissive.setHex( 0xcc0000 );\n\t},\n\tonGazeLong: function(){\n\t\t// do something user targetes object for specific time\n\t\tthis.material.emissive.setHex( 0x0000cc );\n\t},\n\tonGazeClick: function(){\n\t\t// have the object react when user clicks / taps on targeted object\n\t\tthis.material.emissive.setHex( 0x0000cc );\n\t}\n});\n``` \n\nYou can also remove targeted objects.\n```javascript\nReticulum.remove( object );\n```\n\n\n### 4. Add to animation loop\n\nAdd Reticulum to your animation loop \n\n```javascript\nReticulum.update()\n```\n\n\n### 5. Add Camera to scene\n\nIf you require to display the reticle you will need to add the `camera` to the `scene`. \n\n**Note:** See Known Issues below if ghosting occurs. \n\n```javascript\nscene.add(camera);\n```\n\n## Demos\n\n- [Basic](https://skezo.github.io/Reticulum/examples/basic.html)\n- [Proximity](https://skezo.github.io/Reticulum/examples/proximity.html) - only display reticle if targeted object is visible\n- [Depth Test](https://skezo.github.io/Reticulum/examples/depth.html) - hit moving targets \n- [Objects in Groups](https://skezo.github.io/Reticulum/examples/groups.html) - hit object in group, get world values \n- [Fuse](https://skezo.github.io/Reticulum/examples/fuse.html) - selective objects have fuse\n- [Visibility](https://skezo.github.io/Reticulum/examples/visibility.html) - test for hitting only visible objects  \n- [Gazeable](https://skezo.github.io/Reticulum/examples/gazeable.html) - test for hitting only gazeable objects  \n\n## Known Issues\n- Ghosting occurs to the reticle and fuse when in VR mode. More details on the issue can found [here](https://github.com/mrdoob/three.js/issues/7041). **A quick workaround** to this issue is adding `camera.updateMatrixWorld();` before the render call (e.g. `manager.render(scene, camera, timestamp);` to the callback function of the `requestAnimationFrame()` method. \n\n\n## Acknowledgements:\nReticulum was inspired by the work done by [neuman](https://github.com/neuman/vreticle)\n\n## License\nThe MIT License (MIT)",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git://github.com/GQPBJ/Reticulum.git"
  },
  "scripts": {},
  "title": "Reticulum",
  "version": "1.0.0"
}
